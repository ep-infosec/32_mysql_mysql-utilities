Test case 1 - failover to localhost:PORT2 with SQL errors on slaves.
# Checking privileges.
# Checking privileges on candidates.
# Performing failover.
# Checking eligibility of slave localhost:PORT2 for candidate.
#   GTID_MODE=ON ... Ok
#   Replication user exists ... Ok
# Candidate slave localhost:PORT2 will become the new master.
# Checking slaves status (before failover).
# ERROR: Problem detected with SQL thread for slave 'localhost'@'PORT2' that can result in an unstable topology.
#  - SQL thread running: No
#  - SQL error: 1007 - Error 'Can't create database 'conflict_tnx'; database exists' on query. Default database: 'conflict_tnx'. Query: 'CREATE DATABASE `conflict_tnx`'
#  Tip: Check the slave server log to identify the problem and fix it. For more information, see: http://dev.mysql.com/doc/refman/5.6/en/replication-problems.html
ERROR: Problem detected with SQL thread for slave 'localhost'@'PORT2' that can result in an unstable topology. Note: To ignore this issue use the utility with the --force option.
Test case 2 - failover to localhost:PORT2 with SQL errors on slaves --force option.
# Checking privileges.
# Checking privileges on candidates.
# Performing failover.
# Checking eligibility of slave localhost:PORT2 for candidate.
#   GTID_MODE=ON ... Ok
#   Replication user exists ... Ok
# Candidate slave localhost:PORT2 will become the new master.
# Checking slaves status (before failover).
# WARNING: Problem detected with SQL thread for slave 'localhost'@'PORT2' that can result in an unstable topology.
#  - SQL thread running: No
#  - SQL error: 1007 - Error 'Can't create database 'conflict_tnx'; database exists' on query. Default database: 'conflict_tnx'. Query: 'CREATE DATABASE `conflict_tnx`'
#  Tip: Check the slave server log to identify the problem and fix it. For more information, see: http://dev.mysql.com/doc/refman/5.6/en/replication-problems.html
# WARNING: Problem detected with SQL thread for slave 'localhost'@'PORT4' that can result in an unstable topology.
#  - SQL thread running: No
#  - SQL error: 1007 - Error 'Can't create database 'conflict_tnx'; database exists' on query. Default database: 'conflict_tnx'. Query: 'CREATE DATABASE `conflict_tnx`'
#  Tip: Check the slave server log to identify the problem and fix it. For more information, see: http://dev.mysql.com/doc/refman/5.6/en/replication-problems.html
# Preparing candidate for failover.
# Reading events in relay log for slave localhost:PORT2
# Reading events in relay log for slave localhost:PORT3
# Missing transactions found on localhost:PORT3. SELECT gtid_subset() = 0
# LOCK STRING: FLUSH TABLES WITH READ LOCK
# Read only is ON for localhost:PORT3.
# Connecting candidate to localhost:PORT3 as a temporary slave to retrieve unprocessed GTIDs.
# Change master command for localhost:PORT2
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT3, MASTER_AUTO_POSITION=1
# Read only is XXX for localhost:PORT3.
# UNLOCK STRING: UNLOCK TABLES
# Waiting for candidate to catch up to slave localhost:PORT3.
# Slave localhost:PORT2:
# QUERY = SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(XXXXXXXXX)
# Return Code = XXX
# Reading events in relay log for slave localhost:PORT4
# Missing transactions found on localhost:PORT4. SELECT gtid_subset() = 0
# LOCK STRING: FLUSH TABLES WITH READ LOCK
# Read only is ON for localhost:PORT4.
# Connecting candidate to localhost:PORT4 as a temporary slave to retrieve unprocessed GTIDs.
# Change master command for localhost:PORT2
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT4, MASTER_AUTO_POSITION=1
# Read only is XXX for localhost:PORT4.
# UNLOCK STRING: UNLOCK TABLES
# Waiting for candidate to catch up to slave localhost:PORT4.
# Slave localhost:PORT2:
# QUERY = SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(XXXXXXXXX)
# Return Code = XXX
# Creating replication user if it does not exist.
# Stopping slaves.
# Performing STOP on all slaves.
#   Executing stop on slave localhost:PORT2 WARN - slave is not configured with this master
#   Executing stop on slave localhost:PORT2 Ok
#   Executing stop on slave localhost:PORT3 WARN - slave is not configured with this master
#   Executing stop on slave localhost:PORT3 Ok
#   Executing stop on slave localhost:PORT4 WARN - slave is not configured with this master
#   Executing stop on slave localhost:PORT4 Ok
# Switching slaves to new master.
# Change master command for localhost:PORT3
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT2, MASTER_AUTO_POSITION=1
# Change master command for localhost:PORT4
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT2, MASTER_AUTO_POSITION=1
# Disconnecting new master as slave.
# Execute on localhost:PORT2: RESET SLAVE ALL
# Starting slaves.
# Performing START on all slaves.
#   Executing start on slave localhost:PORT3 Ok
#   Executing start on slave localhost:PORT4 Ok
# Checking slaves for errors.
# localhost:PORT3 status: Ok 
# localhost:PORT4 status: Ok 
# Failover complete.
# Attempting to contact localhost ... Success
# Attempting to contact localhost ... Success
# Attempting to contact localhost ... Success
#
# Replication Topology Health:
# ...done.
Error found in log file. 
Test case 3 - failover with a slave with GTID_MODE=XXX.
# Checking privileges.
# ERROR: Slave election requires GTID_MODE=ON for all servers.
#  - GTID_MODE=XXX on localhost:PORT5
ERROR: Slave election requires GTID_MODE=ON for all servers.
