Test case 1 - diff a sample database
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `util_test` to "util_test"                             [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`
+++ "util_test"
@@ -1 +1 @@
-CREATE DATABASE `util_test` /*!40100 DEFAULT CHARACTER SET latin1 */
+CREATE DATABASE "util_test" /*!40100 DEFAULT CHARACTER SET latin1 */
# Compare failed. One or more differences found.
Test case 2 - diff a single object - not same
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t2 to util_test.t2                           [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- util_test.t2
+++ util_test.t2
@@ -1,3 +1,3 @@
-CREATE TABLE `t2` (
-  `a` char(30) DEFAULT NULL
-) ENGINE=MyISAM DEFAULT CHARSET=latin1
+CREATE TABLE "t2" (
+  "a" char(30) DEFAULT NULL
+) ENGINE=MEMORY DEFAULT CHARSET=latin1
# Compare failed. One or more differences found.
Test case 3 - diff a single object - is same
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t3 to util_test.t3                           [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Success. All objects are the same.
Test case 4 - diff multiple objects - are same
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t3 to util_test.t3                           [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t4 to util_test.t4                           [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Success. All objects are the same.
Test case 5 - diff multiple objects + database - same name
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t3 to util_test.t3                           [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t4 to util_test.t4                           [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `util_test` to "util_test"                             [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`
+++ "util_test"
@@ -1 +1 @@
-CREATE DATABASE `util_test` /*!40100 DEFAULT CHARACTER SET latin1 */
+CREATE DATABASE "util_test" /*!40100 DEFAULT CHARACTER SET latin1 */
# Comparing `util_test`.`f1` to "util_test"."f1"                   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`.`f1`
+++ "util_test"."f1"
@@ -1,3 +1,3 @@
-CREATE DEFINER=`root`@`localhost` FUNCTION `f1`() RETURNS int(11)
+CREATE DEFINER="root"@"localhost" FUNCTION "f1"() RETURNS int(11)
     DETERMINISTIC
 RETURN (SELECT 1)
# Comparing `util_test`.`f2` to "util_test"."f2"                   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`.`f2`
+++ "util_test"."f2"
@@ -1,3 +1,3 @@
-CREATE DEFINER=`root`@`localhost` FUNCTION `f2`(base_price DECIMAL(20,2) UNSIGNED, tax_percentage DECIMAL(3,0) UNSIGNED) RETURNS decimal(21,2) unsigned
+CREATE DEFINER="root"@"localhost" FUNCTION "f2"(base_price DECIMAL(20,2) UNSIGNED, tax_percentage DECIMAL(3,0) UNSIGNED) RETURNS decimal(21,2) unsigned
     DETERMINISTIC
 RETURN base_price + base_price*(tax_percentage/100)
# Comparing `util_test`.`p1` to "util_test"."p1"                   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`.`p1`
+++ "util_test"."p1"
@@ -1,2 +1,2 @@
-CREATE DEFINER=`root`@`localhost` PROCEDURE `p1`(p1 CHAR(20))
+CREATE DEFINER="root"@"localhost" PROCEDURE "p1"(p1 CHAR(20))
 INSERT INTO util_test.t1 VALUES ('50')
# Comparing `util_test`.`t1` to "util_test"."t1"                   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`.`t1`
+++ "util_test"."t1"
@@ -1,3 +1,4 @@
-CREATE TABLE `t1` (
-  `a` char(30) DEFAULT NULL
+CREATE TABLE "t1" (
+  "a" char(30) DEFAULT NULL,
+  "b" int(11) DEFAULT NULL
 ) ENGINE=MEMORY DEFAULT CHARSET=latin1
# Comparing `util_test`.`t2` to "util_test"."t2"                   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`.`t2`
+++ "util_test"."t2"
@@ -1,3 +1,3 @@
-CREATE TABLE `t2` (
-  `a` char(30) DEFAULT NULL
-) ENGINE=MyISAM DEFAULT CHARSET=latin1
+CREATE TABLE "t2" (
+  "a" char(30) DEFAULT NULL
+) ENGINE=MEMORY DEFAULT CHARSET=latin1
# Comparing `util_test`.`t3` to "util_test"."t3"                   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Comparing `util_test`.`t4` to "util_test"."t4"                   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Comparing `util_test`.`t5` to "util_test"."t5"                   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Comparing `util_test`.`trg` to "util_test"."trg"                 [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`.`trg`
+++ "util_test"."trg"
@@ -1 +1 @@
-CREATE DEFINER=`root`@`localhost` TRIGGER util_test.trg AFTER INSERT ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t2 VALUES('Test objects count')
+CREATE DEFINER="root"@"localhost" TRIGGER util_test.trg AFTER INSERT ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t2 VALUES('Test objects count')
# Comparing `util_test`.`v1` to "util_test"."v1"                   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`.`v1`
+++ "util_test"."v1"
@@ -1 +1 @@
-CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v1` AS select `t1`.`a` AS `a` from `t1`
+CREATE ALGORITHM=UNDEFINED DEFINER="root"@"localhost" SQL SECURITY DEFINER VIEW "v1" AS select "t1"."a" AS "a" from "t1"
# Comparing `util_test`.`v2` to "util_test"."v2"                   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `util_test`.`v2`
+++ "util_test"."v2"
@@ -1 +1 @@
-CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v2` AS select `t5`.`name` AS `name`,`util_test`.`f2`(`t5`.`base_price`,`t5`.`tax_percentage`) AS `price` from `t5`
+CREATE ALGORITHM=UNDEFINED DEFINER="root"@"localhost" SQL SECURITY DEFINER VIEW "v2" AS select "t5"."name" AS "name","util_test"."f2"("t5"."base_price","t5"."tax_percentage") AS "price" from "t5"
# Compare failed. One or more differences found.
Test case 6 - diff two databases on same server w/server2
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# WARNING: Objects in server1.util_test but not in server1.util_test1:
#    PROCEDURE: p1
#        TABLE: t4
#      TRIGGER: trg
#        TABLE: t1
#        TABLE: t3
#     FUNCTION: f1
#         VIEW: v1
#        TABLE: t5
#         VIEW: v2
#     FUNCTION: f2
#        TABLE: t2
# Compare failed. One or more differences found.
Test case 7 - diff two databases on same server
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# WARNING: Objects in server1.util_test but not in server1.util_test1:
#    PROCEDURE: p1
#        TABLE: t4
#      TRIGGER: trg
#        TABLE: t1
#        TABLE: t3
#     FUNCTION: f1
#         VIEW: v1
#        TABLE: t5
#         VIEW: v2
#     FUNCTION: f2
#        TABLE: t2
# Compare failed. One or more differences found.
Test case 8 - diff a sample database with weird names (backticks)
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `db.``:db` to "db.`:db"                                [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db.``:db`
+++ "db.`:db"
@@ -1 +1 @@
-CREATE DATABASE `db.``:db` /*!40100 DEFAULT CHARACTER SET latin1 */
+CREATE DATABASE "db.`:db" /*!40100 DEFAULT CHARACTER SET latin1 */
# Compare failed. One or more differences found.
Test case 9 - diff a single object with weird names (backticks)
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `db.``:db`.```t``.``export_2` to "db.`:db"."`t`.`export_2"   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Success. All objects are the same.
Test case 10 - diff a sample database containing tables with weird names (no backticks) and different table options.
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `db_diff_test` to "db_diff_test"                       [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db_diff_test`
+++ "db_diff_test"
@@ -1 +1 @@
-CREATE DATABASE `db_diff_test` /*!40100 DEFAULT CHARACTER SET latin1 */
+CREATE DATABASE "db_diff_test" /*!40100 DEFAULT CHARACTER SET latin1 */
# Compare failed. One or more differences found.
Test case 11 - diff a sample database containing tables with weird names (no backticks) and skipping table options.
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `db_diff_test` to "db_diff_test"                       [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db_diff_test`
+++ "db_diff_test"
@@ -1 +1 @@
-CREATE DATABASE `db_diff_test` /*!40100 DEFAULT CHARACTER SET latin1 */
+CREATE DATABASE "db_diff_test" /*!40100 DEFAULT CHARACTER SET latin1 */
# Compare failed. One or more differences found.
Test case 12 - diff a database with objects of different types with differences on name only due sql_mode
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `db.``:db` to "db.`:db"                                [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db.``:db`
+++ "db.`:db"
@@ -1 +1 @@
-CREATE DATABASE `db.``:db` /*!40100 DEFAULT CHARACTER SET latin1 */
+CREATE DATABASE "db.`:db" /*!40100 DEFAULT CHARACTER SET latin1 */
# Comparing `db.``:db`.```t``export_1` to "db.`:db"."`t`export_1"   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db.``:db`.```t``export_1`
+++ "db.`:db"."`t`export_1"
@@ -1,2 +1,2 @@
-CREATE DEFINER=`root`@`localhost` PROCEDURE ```t``export_1`()
+CREATE DEFINER="root"@"localhost" PROCEDURE "`t`export_1"()
 SELECT 1
# Comparing `db.``:db`.```t``.``export_2` to "db.`:db"."`t`.`export_2"   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Comparing `db.``:db`.```t``export_1` to "db.`:db"."`t`export_1"   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Comparing `db.``:db`.```v``export_1` to "db.`:db"."`v`export_1"   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db.``:db`.```v``export_1`
+++ "db.`:db"."`v`export_1"
@@ -1 +1 @@
-CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW ```v``export_1` AS select ```t``export_1`.`id``` AS `id```,```t``export_1`.`other` AS `other` from ```t``export_1`
+CREATE ALGORITHM=UNDEFINED DEFINER="root"@"localhost" SQL SECURITY DEFINER VIEW "`v`export_1" AS select "`t`export_1"."id`" AS "id`","`t`export_1"."other" AS "other" from "`t`export_1"
# Compare failed. One or more differences found.
Test case 13 - diff a database with objects of different types with the same name (with differences)
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `db.``:db` to "db.`:db"                                [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db.``:db`
+++ "db.`:db"
@@ -1 +1 @@
-CREATE DATABASE `db.``:db` /*!40100 DEFAULT CHARACTER SET latin1 */
+CREATE DATABASE "db.`:db" /*!40100 DEFAULT CHARACTER SET latin1 */
# Comparing `db.``:db`.```t``export_1` to "db.`:db"."`t`export_1"   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db.``:db`.```t``export_1`
+++ "db.`:db"."`t`export_1"
@@ -1,2 +1,2 @@
-CREATE DEFINER=`root`@`localhost` PROCEDURE ```t``export_1`()
-SELECT 1
+CREATE DEFINER="root"@"localhost" PROCEDURE "`t`export_1"()
+SELECT 2
# Comparing `db.``:db`.```t``.``export_2` to "db.`:db"."`t`.`export_2"   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Comparing `db.``:db`.```t``export_1` to "db.`:db"."`t`export_1"   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Comparing `db.``:db`.```v``export_1` to "db.`:db"."`v`export_1"   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db.``:db`.```v``export_1`
+++ "db.`:db"."`v`export_1"
@@ -1 +1 @@
-CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW ```v``export_1` AS select ```t``export_1`.`id``` AS `id```,```t``export_1`.`other` AS `other` from ```t``export_1`
+CREATE ALGORITHM=UNDEFINED DEFINER="root"@"localhost" SQL SECURITY DEFINER VIEW "`v`export_1" AS select "`t`export_1"."id`" AS "id`","`t`export_1"."other" AS "other" from "`t`export_1"
# Compare failed. One or more differences found.
Test case 14 - diff specific objects of different types with the same name (with differences)
# WARNING: Using a password on the command line interface can be insecure.
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing `db.``:db`.```t``export_1` to "db.`:db"."`t`export_1"   [PASS]
# WARNING: The tables structure is the same, but the columns order is different. Use --change-for to take the order into account.
# Comparing `db.``:db`.```t``export_1` to "db.`:db"."`t`export_1"   [FAIL]
# Object definitions differ. (--changes-for=server1)
#

--- `db.``:db`.```t``export_1`
+++ "db.`:db"."`t`export_1"
@@ -1,2 +1,2 @@
-CREATE DEFINER=`root`@`localhost` PROCEDURE ```t``export_1`()
-SELECT 1
+CREATE DEFINER="root"@"localhost" PROCEDURE "`t`export_1"()
+SELECT 2
# Compare failed. One or more differences found.
