Test case 1 - create transform for objects for --changes-for=server1
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# WARNING: Objects in server1.util_test but not in server2.util_test:
#     FUNCTION: f2
#        EVENT: e1
#        TABLE: t5
#         VIEW: v2
# Comparing `util_test` to `util_test`                             [PASS]
# Comparing `util_test`.`f1` to `util_test`.`f1`                   [FAIL]
# Transformation for --changes-for=server1:
#

DROP FUNCTION IF EXISTS `util_test`.`f1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `util_test`.`f1` () RETURNS int(11) CONTAINS SQL DETERMINISTIC SQL SECURITY DEFINER RETURN (SELECT -1)//
DELIMITER ;


# Comparing `util_test`.`p1` to `util_test`.`p1`                   [FAIL]
# Transformation for --changes-for=server1:
#

DROP PROCEDURE IF EXISTS `util_test`.`p1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `util_test`.`p1` (p1 CHAR(20)) CONTAINS SQL SQL SECURITY DEFINER INSERT INTO util_test.t2 VALUES ("100")//
DELIMITER ;


# Comparing `util_test`.`t1` to `util_test`.`t1`                   [PASS]
# Comparing `util_test`.`t2` to `util_test`.`t2`                   [PASS]
# Comparing `util_test`.`t3` to `util_test`.`t3`                   [FAIL]
# Transformation for --changes-for=server1:
#

ALTER TABLE `util_test`.`t3` 
  DROP COLUMN b, 
  ADD COLUMN d char(30) NULL AFTER a, 
ENGINE=MyISAM, AUTO_INCREMENT=4;

# Comparing `util_test`.`t4` to `util_test`.`t4`                   [FAIL]
# Transformation for --changes-for=server1:
#

ALTER TABLE `util_test`.`t4` 
  DROP FOREIGN KEY ref_t3, 
  DROP INDEX ref_t3, 
ENGINE=MyISAM;

# Comparing `util_test`.`trg` to `util_test`.`trg`                 [FAIL]
# Transformation for --changes-for=server1:
#

DROP TRIGGER IF EXISTS `util_test`.`trg`;
CREATE DEFINER=root@localhost TRIGGER util_test.trg BEFORE UPDATE ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t1 VALUES('Wax on, wax off');

# Comparing `util_test`.`v1` to `util_test`.`v1`                   [FAIL]
# Transformation for --changes-for=server1:
#

ALTER VIEW util_test.v1 AS 
  select `util_test`.`t2`.`a` AS `a` from `util_test`.`t2`;

# Compare failed. One or more differences found.
Test case 2 - create transform for objects for --changes-for=server2
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# WARNING: Objects in server1.util_test but not in server2.util_test:
#     FUNCTION: f2
#        EVENT: e1
#        TABLE: t5
#         VIEW: v2
# Comparing `util_test` to `util_test`                             [PASS]
# Comparing `util_test`.`f1` to `util_test`.`f1`                   [FAIL]
# Transformation for --changes-for=server2:
#

DROP FUNCTION IF EXISTS `util_test`.`f1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `util_test`.`f1` () RETURNS int(11) CONTAINS SQL DETERMINISTIC SQL SECURITY DEFINER RETURN (SELECT 1)//
DELIMITER ;


# Comparing `util_test`.`p1` to `util_test`.`p1`                   [FAIL]
# Transformation for --changes-for=server2:
#

DROP PROCEDURE IF EXISTS `util_test`.`p1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `util_test`.`p1` (p1 CHAR(20)) CONTAINS SQL SQL SECURITY DEFINER INSERT INTO util_test.t1 VALUES ("50")//
DELIMITER ;


# Comparing `util_test`.`t1` to `util_test`.`t1`                   [PASS]
# Comparing `util_test`.`t2` to `util_test`.`t2`                   [PASS]
# Comparing `util_test`.`t3` to `util_test`.`t3`                   [FAIL]
# Transformation for --changes-for=server2:
#

ALTER TABLE `util_test`.`t3` 
  DROP COLUMN d, 
  ADD COLUMN b varchar(30) NULL AFTER a, 
ENGINE=InnoDB, AUTO_INCREMENT=5;

# Comparing `util_test`.`t4` to `util_test`.`t4`                   [FAIL]
# Transformation for --changes-for=server2:
#

ALTER TABLE `util_test`.`t4` 
ADD CONSTRAINT ref_t3 FOREIGN KEY(c) REFERENCES `util_test`.`t3`(a), 
  ADD INDEX ref_t3 (c), 
ENGINE=InnoDB;

# Comparing `util_test`.`trg` to `util_test`.`trg`                 [FAIL]
# Transformation for --changes-for=server2:
#

DROP TRIGGER IF EXISTS `util_test`.`trg`;
CREATE DEFINER=root@localhost TRIGGER util_test.trg AFTER INSERT ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t2 VALUES('Test objects count');

# Comparing `util_test`.`v1` to `util_test`.`v1`                   [FAIL]
# Transformation for --changes-for=server2:
#

ALTER VIEW util_test.v1 AS 
  select `util_test`.`t1`.`a` AS `a` from `util_test`.`t1`;

# Compare failed. One or more differences found.
Test case 3 - create transform for objects for --changes-for=server1 with reverse
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# WARNING: Objects in server1.util_test but not in server2.util_test:
#     FUNCTION: f2
#        EVENT: e1
#        TABLE: t5
#         VIEW: v2
# Comparing `util_test` to `util_test`                             [PASS]
# Comparing `util_test`.`f1` to `util_test`.`f1`                   [FAIL]
# Transformation for --changes-for=server1:
#

DROP FUNCTION IF EXISTS `util_test`.`f1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `util_test`.`f1` () RETURNS int(11) CONTAINS SQL DETERMINISTIC SQL SECURITY DEFINER RETURN (SELECT -1)//
DELIMITER ;


#
# Transformation for reverse changes (--changes-for=server2):
#
# DROP FUNCTION IF EXISTS `util_test`.`f1`;
# DELIMITER //
# CREATE DEFINER=`root`@`localhost` FUNCTION `util_test`.`f1` () RETURNS int(11) CONTAINS SQL DETERMINISTIC SQL SECURITY DEFINER RETURN (SELECT 1)//
# DELIMITER ;
# 
#

# Comparing `util_test`.`p1` to `util_test`.`p1`                   [FAIL]
# Transformation for --changes-for=server1:
#

DROP PROCEDURE IF EXISTS `util_test`.`p1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `util_test`.`p1` (p1 CHAR(20)) CONTAINS SQL SQL SECURITY DEFINER INSERT INTO util_test.t2 VALUES ("100")//
DELIMITER ;


#
# Transformation for reverse changes (--changes-for=server2):
#
# DROP PROCEDURE IF EXISTS `util_test`.`p1`;
# DELIMITER //
# CREATE DEFINER=`root`@`localhost` PROCEDURE `util_test`.`p1` (p1 CHAR(20)) CONTAINS SQL SQL SECURITY DEFINER INSERT INTO util_test.t1 VALUES ("50")//
# DELIMITER ;
# 
#

# Comparing `util_test`.`t1` to `util_test`.`t1`                   [PASS]
# Comparing `util_test`.`t2` to `util_test`.`t2`                   [PASS]
# Comparing `util_test`.`t3` to `util_test`.`t3`                   [FAIL]
# Transformation for --changes-for=server1:
#

ALTER TABLE `util_test`.`t3` 
  DROP COLUMN b, 
  ADD COLUMN d char(30) NULL AFTER a, 
ENGINE=MyISAM, AUTO_INCREMENT=4;

#
# Transformation for reverse changes (--changes-for=server2):
#
# ALTER TABLE `util_test`.`t3` 
#   DROP COLUMN d, 
#   ADD COLUMN b varchar(30) NULL AFTER a, 
# ENGINE=InnoDB, AUTO_INCREMENT=5;
#

# Comparing `util_test`.`t4` to `util_test`.`t4`                   [FAIL]
# Transformation for --changes-for=server1:
#

ALTER TABLE `util_test`.`t4` 
  DROP FOREIGN KEY ref_t3, 
  DROP INDEX ref_t3, 
ENGINE=MyISAM;

#
# Transformation for reverse changes (--changes-for=server2):
#
# ALTER TABLE `util_test`.`t4` 
# ADD CONSTRAINT ref_t3 FOREIGN KEY(c) REFERENCES `util_test`.`t3`(a), 
#   ADD INDEX ref_t3 (c), 
# ENGINE=InnoDB;
#

# Comparing `util_test`.`trg` to `util_test`.`trg`                 [FAIL]
# Transformation for --changes-for=server1:
#

DROP TRIGGER IF EXISTS `util_test`.`trg`;
CREATE DEFINER=root@localhost TRIGGER util_test.trg BEFORE UPDATE ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t1 VALUES('Wax on, wax off');

#
# Transformation for reverse changes (--changes-for=server2):
#
# DROP TRIGGER IF EXISTS `util_test`.`trg`;
# CREATE DEFINER=root@localhost TRIGGER util_test.trg AFTER INSERT ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t2 VALUES('Test objects count');
#

# Comparing `util_test`.`v1` to `util_test`.`v1`                   [FAIL]
# Transformation for --changes-for=server1:
#

ALTER VIEW util_test.v1 AS 
  select `util_test`.`t2`.`a` AS `a` from `util_test`.`t2`;

#
# Transformation for reverse changes (--changes-for=server2):
#
# ALTER VIEW util_test.v1 AS 
#   select `util_test`.`t1`.`a` AS `a` from `util_test`.`t1`;
#

# Compare failed. One or more differences found.
Test case 4 - create transform for objects for --changes-for=server2 with reverse
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# WARNING: Objects in server1.util_test but not in server2.util_test:
#     FUNCTION: f2
#        EVENT: e1
#        TABLE: t5
#         VIEW: v2
# Comparing `util_test` to `util_test`                             [PASS]
# Comparing `util_test`.`f1` to `util_test`.`f1`                   [FAIL]
# Transformation for --changes-for=server2:
#

DROP FUNCTION IF EXISTS `util_test`.`f1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `util_test`.`f1` () RETURNS int(11) CONTAINS SQL DETERMINISTIC SQL SECURITY DEFINER RETURN (SELECT 1)//
DELIMITER ;


#
# Transformation for reverse changes (--changes-for=server1):
#
# DROP FUNCTION IF EXISTS `util_test`.`f1`;
# DELIMITER //
# CREATE DEFINER=`root`@`localhost` FUNCTION `util_test`.`f1` () RETURNS int(11) CONTAINS SQL DETERMINISTIC SQL SECURITY DEFINER RETURN (SELECT -1)//
# DELIMITER ;
# 
#

# Comparing `util_test`.`p1` to `util_test`.`p1`                   [FAIL]
# Transformation for --changes-for=server2:
#

DROP PROCEDURE IF EXISTS `util_test`.`p1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `util_test`.`p1` (p1 CHAR(20)) CONTAINS SQL SQL SECURITY DEFINER INSERT INTO util_test.t1 VALUES ("50")//
DELIMITER ;


#
# Transformation for reverse changes (--changes-for=server1):
#
# DROP PROCEDURE IF EXISTS `util_test`.`p1`;
# DELIMITER //
# CREATE DEFINER=`root`@`localhost` PROCEDURE `util_test`.`p1` (p1 CHAR(20)) CONTAINS SQL SQL SECURITY DEFINER INSERT INTO util_test.t2 VALUES ("100")//
# DELIMITER ;
# 
#

# Comparing `util_test`.`t1` to `util_test`.`t1`                   [PASS]
# Comparing `util_test`.`t2` to `util_test`.`t2`                   [PASS]
# Comparing `util_test`.`t3` to `util_test`.`t3`                   [FAIL]
# Transformation for --changes-for=server2:
#

ALTER TABLE `util_test`.`t3` 
  DROP COLUMN d, 
  ADD COLUMN b varchar(30) NULL AFTER a, 
ENGINE=InnoDB, AUTO_INCREMENT=5;

#
# Transformation for reverse changes (--changes-for=server1):
#
# ALTER TABLE `util_test`.`t3` 
#   DROP COLUMN b, 
#   ADD COLUMN d char(30) NULL AFTER a, 
# ENGINE=MyISAM, AUTO_INCREMENT=4;
#

# Comparing `util_test`.`t4` to `util_test`.`t4`                   [FAIL]
# Transformation for --changes-for=server2:
#

ALTER TABLE `util_test`.`t4` 
ADD CONSTRAINT ref_t3 FOREIGN KEY(c) REFERENCES `util_test`.`t3`(a), 
  ADD INDEX ref_t3 (c), 
ENGINE=InnoDB;

#
# Transformation for reverse changes (--changes-for=server1):
#
# ALTER TABLE `util_test`.`t4` 
#   DROP FOREIGN KEY ref_t3, 
#   DROP INDEX ref_t3, 
# ENGINE=MyISAM;
#

# Comparing `util_test`.`trg` to `util_test`.`trg`                 [FAIL]
# Transformation for --changes-for=server2:
#

DROP TRIGGER IF EXISTS `util_test`.`trg`;
CREATE DEFINER=root@localhost TRIGGER util_test.trg AFTER INSERT ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t2 VALUES('Test objects count');

#
# Transformation for reverse changes (--changes-for=server1):
#
# DROP TRIGGER IF EXISTS `util_test`.`trg`;
# CREATE DEFINER=root@localhost TRIGGER util_test.trg BEFORE UPDATE ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t1 VALUES('Wax on, wax off');
#

# Comparing `util_test`.`v1` to `util_test`.`v1`                   [FAIL]
# Transformation for --changes-for=server2:
#

ALTER VIEW util_test.v1 AS 
  select `util_test`.`t1`.`a` AS `a` from `util_test`.`t1`;

#
# Transformation for reverse changes (--changes-for=server1):
#
# ALTER VIEW util_test.v1 AS 
#   select `util_test`.`t2`.`a` AS `a` from `util_test`.`t2`;
#

# Compare failed. One or more differences found.
Test case 5 - create transform for renamed table 
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t1 to util_test.t6                           [FAIL]
# Transformation for --changes-for=server1:
#

ALTER TABLE `util_test`.`t1` 
RENAME TO util_test.t6 
, ENGINE=MyISAM;

# Compare failed. One or more differences found.
Test case 6 - test transform for renamed table 
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t6 to util_test.t6                           [PASS]
# Success. All objects are the same.
Test case 7 - test transform for column with default '' for --changes-for=server1
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t6 to util_test.t6                           [FAIL]
# Transformation for --changes-for=server1:
#

ALTER TABLE `util_test`.`t6` 
  CHANGE COLUMN a a char(30) NOT NULL DEFAULT '';

# Compare failed. One or more differences found.
Test case 8 - test transform for column with default '' for --changes-for=server2
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test.t6 to util_test.t6                           [FAIL]
# Transformation for --changes-for=server2:
#

ALTER TABLE `util_test`.`t6` 
  CHANGE COLUMN a a char(30) NULL;

# Compare failed. One or more differences found.
